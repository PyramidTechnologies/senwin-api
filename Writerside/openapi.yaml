openapi: 3.1.0
info:
  title: SenWin
  version: 0.0.0
tags: []
paths:
  /v1/devices/{deviceId}:
    get:
      operationId: Devices_getDevice
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Devices_updateDeviceName
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Device name has been updated.
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
    delete:
      operationId: Devices_removeDevice
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The device has been removed.
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: Commands_sendCommand
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The command was successfully sent to the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandRequest'
  /v1/devices/{deviceId}/dispenses:
    get:
      operationId: Dispenses_getDispenses
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DispenseEvent'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/devices/{deviceId}/fills:
    get:
      operationId: Fills_getFills
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/FillEvent'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/devices/{deviceId}/logins:
    get:
      operationId: Logins_getLogins
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/LoginEvent'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/devices/{deviceId}/periods:
    get:
      operationId: Periods_getPeriods
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PeriodReport'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/devices/{deviceId}/redemptions:
    get:
      operationId: Redemptions_getRedemptions
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Redemption'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/devices/{deviceId}/{commandId}:
    get:
      operationId: Commands_getCommandStatus
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commandId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: Commands_cancelCommand
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commandId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The command was successfully canceled.
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/fleets:
    get:
      operationId: Fleets_getFleets
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fleet'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: Fleets_createFleet
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
  /v1/fleets/{fleetId}:
    get:
      operationId: Fleets_getFleet
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Fleets_updateFleet
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
    delete:
      operationId: Fleets_deleteFleet
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/fleets/{fleetId}/devices:
    get:
      operationId: Devices_getDevices
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: Devices_pairDevice
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PairingRequest'
  /v1/fleets/{fleetId}/fills:
    get:
      operationId: Fills_getFills
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/FillEvent'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/fleets/{fleetId}/periods:
    get:
      operationId: Periods_getPeriods
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PeriodReport'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/fleets/{fleetId}/redemptions:
    get:
      operationId: Redemptions_getRedemptions
      parameters:
        - name: fleetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/DateRangeParams.startDate'
        - $ref: '#/components/parameters/DateRangeParams.endDate'
        - $ref: '#/components/parameters/PagingParams'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Redemption'
                  nextCursor:
                    type: string
                required:
                  - items
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
security:
  - ApiKeyAuth: []
components:
  parameters:
    DateRangeParams.endDate:
      name: endDate
      in: query
      required: false
      schema:
        type: string
        format: date-time
      explode: false
    DateRangeParams.startDate:
      name: startDate
      in: query
      required: false
      schema:
        type: string
        format: date-time
      explode: false
    PagingParams:
      name: cursor
      in: query
      required: false
      schema:
        type: string
      explode: false
  schemas:
    Cassette:
      type: object
      required:
        - denomination
        - count
      properties:
        denomination:
          type: integer
          format: int16
        count:
          type: integer
          format: int16
    CassetteDispense:
      type: object
      required:
        - denomination
        - count
        - dispensed
        - rejected
      properties:
        denomination:
          type: integer
          format: int16
        count:
          type: integer
          format: int16
        dispensed:
          type: integer
          format: int16
        rejected:
          type: integer
          format: int16
    CassetteFill:
      type: object
      required:
        - denomination
        - count
        - filled
        - dispensed
        - rejected
      properties:
        denomination:
          type: integer
          format: int16
        count:
          type: integer
          format: int16
        filled:
          type: integer
          format: int16
        dispensed:
          type: integer
          format: int16
        rejected:
          type: integer
          format: int16
    Command:
      type: object
      required:
        - command_id
        - device_id
        - command
        - status
        - sent_at
      properties:
        command_id:
          type: integer
          format: int64
        device_id:
          type: integer
          format: int64
        command:
          $ref: '#/components/schemas/CommandType'
        status:
          $ref: '#/components/schemas/CommandStatus'
        sent_at:
          type: string
          format: date-time
        scheduled_for:
          type: string
          format: date-time
        expire_after:
          type: string
          format: date-time
    CommandRequest:
      type: object
      required:
        - command
      properties:
        command:
          $ref: '#/components/schemas/CommandType'
        scheduleFor:
          type: string
          format: date-time
          description: > 
            The date and time when the command should be executed. 
            If not provided or the time has already passed, the command will be executed immediately.
        expireAfter:
          type: string
          format: date-time
          description: >
            The date and time when the command will expire. 
            If not provided, the command will not expire.
            Must be in the future.
    CommandResponse:
      type: object
      required:
        - command_id
        - device_id
      properties:
        command_id:
          type: integer
          format: int64
        device_id:
          type: integer
          format: int64
    CommandStatus:
      type: string
      enum:
        - pending
        - success
        - failed
        - canceled
    CommandType:
      type: string
      enum:
        - outOfService
        - restart
        - resetDispenser
    Device:
      type: object
      required:
        - id
        - fleet_id
        - serial_number
        - status
        - last_seen
        - app_version
        - cassettes
      properties:
        id:
          type: integer
          format: int64
        fleet_id:
          type: integer
          format: int64
        serial_number:
          type: string
        status:
          $ref: '#/components/schemas/DeviceStatus'
        last_seen:
          type: string
          format: date-time
        app_version:
          type: string
        status_message:
          type: string
        nickname:
          type: string
        cassettes:
          type: array
          items:
            $ref: '#/components/schemas/Cassette'
    DeviceStatus:
      type: string
      enum:
        - okay
        - low
        - empty
    DispenseError:
      type: string
      enum:
        - none
        - outOfBills
        - jammed
        - error
    DispenseEvent:
      type: object
      required:
        - id
        - device_id
        - timestamp
        - cassettes
        - error
      properties:
        id:
          type: integer
          format: int64
        device_id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        cassettes:
          type: array
          items:
            $ref: '#/components/schemas/CassetteDispense'
        error:
          $ref: '#/components/schemas/DispenseError'
        error_message:
          type: string
          description: Description of the error or relevant error codes, if any
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    FillEvent:
      type: object
      required:
        - id
        - device_id
        - filled_at
        - cassettes
      properties:
        id:
          type: integer
          format: int64
        device_id:
          type: integer
          format: int64
        filled_at:
          type: string
          format: date-time
        cassettes:
          type: array
          items:
            $ref: '#/components/schemas/CassetteFill'
    Fleet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    LoginEvent:
      type: object
      required:
        - id
        - device_id
        - failed_attempts
        - attempted_at
        - user
        - logged_in
      properties:
        id:
          type: integer
          format: int64
        device_id:
          type: integer
          format: int64
        failed_attempts:
          type: integer
          format: int8
          description: Number of times an incorrect PIN was entered
        attempted_at:
          type: string
          format: date-time
          description: Date and time of the login attempt
        user:
          type: string
        logged_in:
          type: boolean
          description: Whether the login attempt was successful
    PairingRequest:
      type: object
      required:
        - pairing_code
      properties:
        pairing_code:
          type: string
          description: The pairing code generated by the device
    PeriodReport:
      type: object
      required:
        - device_id
        - start
        - end
        - totalRedeemed
        - totalDue
      properties:
        device_id:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        totalRedeemed:
          type: integer
          format: int32
          description: Total amount redeemed during the period, in cents
        totalDue:
          type: integer
          format: int32
          description: Total amount of incomplete payouts during the period, in cents
    Redemption:
      type: object
      required:
        - id
        - device_id
        - amount
        - time_in
        - redeemed_at
        - created_at
        - hash
        - printer_serial
        - status
      properties:
        id:
          type: integer
          format: int64
        device_id:
          type: integer
          format: int64
        amount:
          type: integer
          format: int32
          description: Amount the ticket is worth, in cents
        time_in:
          type: string
          format: date-time
          description: Date and time the database record was created
        redeemed_at:
          type: string
          format: date-time
          description: Date and time the ticket was validated
        created_at:
          type: string
          format: date-time
          description: Date and time the ticket was printed
        hash:
          type: string
        printer_serial:
          type: string
          description: Serial number of the printer that printed the ticket
        status:
          $ref: '#/components/schemas/RedemptionStatus'
    RedemptionStatus:
      type: string
      enum:
        - redeemed
        - duplicate
        - expired
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
